<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.39.0" timestamp="2024-02-28T17:52:53.973">
<file name="C:\Users\r.lerner\Downloads\Pokemon-Battle\Pokemon-Battle-main\src\main\java\Player.java">
<violation beginline="9" endline="110" begincolumn="1" endcolumn="1" rule="NoPackage" ruleset="Code Style" class="Player" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#nopackage" priority="3">
All classes, interfaces, enums and annotations must belong to a named package
</violation>
<violation beginline="9" endline="110" begincolumn="17" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" class="Player" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="10" endline="10" begincolumn="13" endcolumn="19" rule="BeanMembersShouldSerialize" ruleset="Error Prone" class="Player" variable="monster" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#beanmembersshouldserialize" priority="3">
Found non-transient, non-static member. Please mark as transient or provide accessors.
</violation>
<violation beginline="10" endline="10" begincolumn="5" endcolumn="20" rule="CommentDefaultAccessModifier" ruleset="Code Style" class="Player" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the monster field if you want a default access modifier
</violation>
<violation beginline="25" endline="30" begincolumn="9" endcolumn="9" rule="SimplifyBooleanReturns" ruleset="Design" class="Player" method="hasLost" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#simplifybooleanreturns" priority="3">
Avoid unnecessary if..then..else statements when returning booleans
</violation>
<violation beginline="26" endline="26" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" class="Player" method="hasLost" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="40" endline="40" begincolumn="33" endcolumn="44" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" class="Player" method="isFasterThan" variable="enemy" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'enemy' is not assigned and could be declared final
</violation>
<violation beginline="41" endline="46" begincolumn="9" endcolumn="9" rule="SimplifyBooleanReturns" ruleset="Design" class="Player" method="isFasterThan" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#simplifybooleanreturns" priority="3">
Avoid unnecessary if..then..else statements when returning booleans
</violation>
<violation beginline="41" endline="41" begincolumn="40" endcolumn="68" rule="LawOfDemeter" ruleset="Design" class="Player" method="isFasterThan" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="42" endline="42" begincolumn="13" endcolumn="24" rule="OnlyOneReturn" ruleset="Code Style" class="Player" method="isFasterThan" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#onlyonereturn" priority="3">
A method should have only one exit point, and that should be the last statement in the method
</violation>
<violation beginline="57" endline="57" begincolumn="43" endcolumn="43" rule="ShortVariable" ruleset="Code Style" class="Player" method="attack" variable="m" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like m
</violation>
<violation beginline="57" endline="57" begincolumn="39" endcolumn="43" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" class="Player" method="attack" variable="m" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'm' is not assigned and could be declared final
</violation>
<violation beginline="57" endline="104" begincolumn="12" endcolumn="5" rule="CognitiveComplexity" ruleset="Design" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'attack(Player, int)' has a cognitive complexity of 15, current threshold is 15
</violation>
<violation beginline="58" endline="58" begincolumn="9" endcolumn="36" rule="LocalVariableCouldBeFinal" ruleset="Code Style" class="Player" method="attack" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'random' could be declared final
</violation>
<violation beginline="59" endline="59" begincolumn="9" endcolumn="41" rule="LocalVariableCouldBeFinal" ruleset="Code Style" class="Player" method="attack" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'roll' could be declared final
</violation>
<violation beginline="60" endline="60" begincolumn="13" endcolumn="32" rule="LinguisticNaming" ruleset="Code Style" class="Player" method="attack" variable="isSuperEffective" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The variable 'isSuperEffective' indicates linguistically it is a boolean, but it is 'int'
</violation>
<violation beginline="71" endline="71" begincolumn="13" endcolumn="60" rule="LocalVariableCouldBeFinal" ruleset="Code Style" class="Player" method="attack" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'weakness' could be declared final
</violation>
<violation beginline="71" endline="71" begincolumn="33" endcolumn="60" rule="LawOfDemeter" ruleset="Design" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (static property access)
</violation>
<violation beginline="72" endline="72" begincolumn="13" endcolumn="60" rule="LocalVariableCouldBeFinal" ruleset="Code Style" class="Player" method="attack" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'strength' could be declared final
</violation>
<violation beginline="72" endline="72" begincolumn="33" endcolumn="60" rule="LawOfDemeter" ruleset="Design" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (static property access)
</violation>
<violation beginline="77" endline="77" begincolumn="21" endcolumn="68" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="77" endline="77" begincolumn="21" endcolumn="68" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="81" endline="81" begincolumn="21" endcolumn="68" rule="CompareObjectsWithEquals" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
<violation beginline="81" endline="81" begincolumn="21" endcolumn="68" rule="UseEqualsToCompareStrings" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#useequalstocomparestrings" priority="3">
Use equals() to compare strings instead of '==' or '!='
</violation>
<violation beginline="91" endline="92" begincolumn="27" endcolumn="57" rule="UselessParentheses" ruleset="Code Style" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="92" endline="92" begincolumn="30" endcolumn="56" rule="LawOfDemeter" ruleset="Design" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (static property access)
</violation>
<violation beginline="96" endline="96" begincolumn="37" endcolumn="37" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="99" endline="99" begincolumn="37" endcolumn="37" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="102" endline="102" begincolumn="77" endcolumn="100" rule="LawOfDemeter" ruleset="Design" class="Player" method="attack" externalInfoUrl="https://pmd.github.io/pmd-6.39.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (static property access)
</violation>
</file>
<configerror rule="LoosePackageCoupling" msg="No packages or classes specified"/>
</pmd>
